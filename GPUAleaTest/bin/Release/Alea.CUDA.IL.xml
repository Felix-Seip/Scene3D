<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Alea.CUDA.IL</name></assembly>
<members>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ActionEntry">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.DynamicObject">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.FuncEntry">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`2">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`3">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`4">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`5">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`6">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`7">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IActionEntry`8">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`2">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`3">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`4">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`5">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`6">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`7">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`8">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.IFuncEntry`9">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILAOTCompiler">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`2">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`3">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`4">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`5">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`6">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`7">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILActionEntryBuilder`8">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.ILCompiler.Extensions">
<summary>
 When you are using F# `cuda` workflow and your kernel quotation will call into some non-quoted
 code, you need install this in `CompileOptions` to make F# quotation compiler can compile IL code.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``7(System.Action{``0,``1,``2,``3,``4,``5,``6})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``6(System.Action{``0,``1,``2,``3,``4,``5})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``5(System.Action{``0,``1,``2,``3,``4})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``4(System.Action{``0,``1,``2,``3})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``3(System.Action{``0,``1,``2})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``2(System.Action{``0,``1})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel``1(System.Action{``0})">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel(System.Action)">
<summary>
 Define kernel template by action delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel(System.Reflection.MethodInfo,System.Object)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineKernel(System.Reflection.MethodInfo)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILCompiler.DefineEntry``1(System.Func{Alea.CUDA.Program,``0})">
<summary>
 Define host entry template by func delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILCompiler">
<summary>
This type provides methods to define GPU resources as template. In F#, it can be
used in `cuda` workflow in order to support compiling non-quoted code. In other .NET
language such as F# or VB, it can be used in LINQ to simulate the workflow.

#### Examples

This is advanced usage, which can give you most flexibility of writing GPU module, 
especially when you use it with `Alea.CUDA.GPUModule.GPUDefineEntry()` method
(see [here](../alea_cuda/alea-cuda-gpumodule.html), you can specify different kernel
implementation according to different GPU architectures.

Here is a simple example of how to write workflow to generate template resource with
LINQ:

    [lang=csharp]
    [Test]
    public void SimpleCopy()
    {
        var template =
            from kernelResource in ILCompiler.DefineKernel(
                (deviceptr&lt;int&gt; outputs, deviceptr&lt;int&gt; inputs, int n) =&gt;
                {
                    var start = blockIdx.x*blockDim.x + threadIdx.x;
                    var stride = gridDim.x*blockDim.x;
                    for (var i = start; i &lt; n; i += stride)
                        outputs[i] = inputs[i];
                })
            from entryResource in ILCompiler.DefineEntry&lt;Action&gt;(program =&gt;
            {
                var worker = program.Worker;
                var kernel = program.Apply(kernelResource);
                var lp = new LaunchParam(8, 64);
                return (() =&gt;
                {
                    const int n = 1000000;
                    var hInputs = CreateRandomIntArray(n);
                    using (var dInputs = worker.Malloc(hInputs))
                    using (var dOutputs = worker.Malloc&lt;int&gt;(n))
                    {
                        kernel.Launch(lp, dOutputs.Ptr, dInputs.Ptr, n);
                        var hOutputs = dOutputs.Gather();
                        for (var i = 0; i &lt; n; ++i)
                        {
                            var expect = hInputs[i];
                            Assert.AreEqual(expect, hOutputs[i]);
                        }
                    }
                });
            })
            select entryResource;

        using (var program = _worker.LoadProgram(template))
        {
            for (var iter = 0; iter &lt; 10; ++iter)
                program.Run();
        }
    }
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`2">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`3">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`4">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`5">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`6">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`7">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`8">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILFuncEntryBuilder`9">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.ModifyCompileOptions(Alea.CUDA.CompileOptions)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``7(System.Action{``0,``1,``2,``3,``4,``5,``6},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``6(System.Action{``0,``1,``2,``3,``4,``5},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``5(System.Action{``0,``1,``2,``3,``4},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``4(System.Action{``0,``1,``2,``3},Alea.CUDA.LaunchParam,``0,``1,``2,``3)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``3(System.Action{``0,``1,``2},Alea.CUDA.LaunchParam,``0,``1,``2)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``2(System.Action{``0,``1},Alea.CUDA.LaunchParam,``0,``1)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch``1(System.Action{``0},Alea.CUDA.LaunchParam,``0)">
<summary>
 Given an action delegate as kernel, then launch it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.GPULaunch(System.Action,Alea.CUDA.LaunchParam)">
<summary>
 Given an action delegate as kernel, then launches it with the provided parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ILGPUModule.#ctor(Alea.CUDA.GPUModuleTarget)">
<summary>
 Creates a module by a target.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILGPUModule">
<summary>
 Provides a way to organize GPU resources. This type inherits from [`Alea.CUDA.GPUModule`](../alea_cuda/alea-cuda-gpumodule.html),
 so it is recommended that you also read the [documentation](../alea_cuda/alea-cuda-gpumodule.html) for that type. The difference 
 between this type and `Alea.CUDA.GPUModule` is, by inheriting your type from this type, you can write kernels using both F# quotations 
 and normal .NET language, such as C# or VB.

#### Examples

Here is an example written in C#:

    [lang=csharp]
    public class MyModule : ILGPUModule
    {
        private readonly Func&lt;int, int&gt; _op; 

        public MyModule(GPUModuleTarget target, Func&lt;int, int&gt; op)
            : base(target)
        {
            _op = op;
        }

        [Kernel]
        public void Kernel(deviceptr&lt;int&gt; outputs, deviceptr&lt;int&gt; inputs)
        {
            var tid = threadIdx.x;
            outputs[tid] = _op(inputs[tid]);
        }

        public void Run()
        {
            const int n = 5;
            var hInputs = Enumerable.Range(0, n).ToArray();
            using (var dInputs = GPUWorker.Malloc(hInputs))
            using (var dOutputs = GPUWorker.Malloc&lt;int&gt;(n))
            {
                var lp = new LaunchParam(1, n);
                GPULaunch(Kernel, lp, dOutputs.Ptr, dInputs.Ptr);
                var hOutputs = dOutputs.Gather();
                foreach (var output in hOutputs)
                {
                    Console.WriteLine(&quot;{0}&quot;, output);
                }
            }
        }
    }
    public class MyAddThreeModule : MyModule
    {
        public MyAddThreeModule(GPUModuleTarget target)
            : base(target, i =&gt; i + 3)
        {
        }
    }
       
    [Test]
    public void TestGPUModule()
    {
        using (var module = new MyModule(GPUModuleTarget.DefaultWorker, i =&gt; i + 4))
        {
            module.Run();
        }
        using (var module = new MyAddThreeModule(GPUModuleTarget.DefaultWorker))
        {
            module.Run();
        }
    }
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`10">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`11">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`12">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`13">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`14">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`15">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`16">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`2">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`3">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`4">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`5">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`6">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`7">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`8">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernel`9">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILRemoteAOTCompiler">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILTemplateProvider`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Interop">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate">
<summary>
 A kernel runtime, which is created by applying a `Program` type onto a kernel delegate resource at runtime.
 This runtime object can be used to launch a kernel via a delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource">
<summary>
 A kernel resource that can be applied by the `Program` type, returning a kernel runtime object, which can then be launched by a delegate.
 When you are using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`1">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`10">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`11">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`12">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`13">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`14">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`15">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`16">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`2">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`3">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`4">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`5">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`6">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`7">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`8">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegateResource`9">
<summary>
 A kernel resource, that can be applied by program into to a kernel runtime object which can be launched by delegate.
 When you using `ILCompiler` to define kernels in LINQ, it will return this kind of resource.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`1.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`1">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`10.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`10">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`11.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`11">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`12.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`12">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`13.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`13">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`14.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`14">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`15.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`15">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`2.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`2">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`3.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`3">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`4.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`4">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`5.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`5">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`6.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`6">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`7.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`7">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`8.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`8">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Alea.CUDA.IL.KernelDelegate`9.Launch">
<summary>
 Gets the action delegate for launching the kernel.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.KernelDelegate`9">
<summary>
 A kernel runtime, which is created by applying program onto a kernel delegate resource in runtime.
 This runtime object can be used to launch kernel by delegate.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``15(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``14(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``13(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``12(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``11(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``10(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``9(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``8(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6,``7})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``7(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5,``6})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``6(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4,``5})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``5(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3,``4})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``4(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2,``3})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``3(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1,``2})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``2(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0,``1})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply``1(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource{``0})">
<summary>
 Applys kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="M:Alea.CUDA.IL.ProgramExtensions.Apply(Alea.CUDA.Program,Alea.CUDA.IL.KernelDelegateResource)">
<summary>
 Applies kernel delegate resource into a kernel delegate runtime object.
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ProgramExtensions">
<summary>
 Extension to `Program` type, to support delegate resources.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.SourceLocationExtension">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Unreachable">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``8(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1,``2,``3,``4,``5,``6,``7})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``7(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1,``2,``3,``4,``5,``6})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``6(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1,``2,``3,``4,``5})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``5(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1,``2,``3,``4})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``4(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1,``2,``3})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``3(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1,``2})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``2(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0,``1})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``1(Alea.CUDA.Worker,Alea.CUDA.IL.ILActionEntryBuilder{``0})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``8(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1,``2,``3,``4,``5,``6,``7})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``7(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1,``2,``3,``4,``5,``6})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``6(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1,``2,``3,``4,``5})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``5(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1,``2,``3,``4})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``4(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1,``2,``3})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``3(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1,``2})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``2(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0,``1})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadProgram``1(Alea.CUDA.Worker,Alea.CUDA.IL.ILFuncEntryBuilder{``0})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``8(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``7(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``6(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``5(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``4(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``3(Alea.CUDA.Worker,System.Action{``0,``1,``2})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``2(Alea.CUDA.Worker,System.Action{``0,``1})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.LoadKernel``1(Alea.CUDA.Worker,System.Action{``0})">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``15(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``14(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``13(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``12(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``11(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``10(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``9(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7,``8)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``8(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``7(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``6(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``5(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``4(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3},Alea.CUDA.LaunchParam,``0,``1,``2,``3)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``3(Alea.CUDA.Worker,System.Action{``0,``1,``2},Alea.CUDA.LaunchParam,``0,``1,``2)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``2(Alea.CUDA.Worker,System.Action{``0,``1},Alea.CUDA.LaunchParam,``0,``1)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch``1(Alea.CUDA.Worker,System.Action{``0},Alea.CUDA.LaunchParam,``0)">
<summary>
 Given a kernel by action delegate, then launchs it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.Launch(Alea.CUDA.Worker,System.Action,Alea.CUDA.LaunchParam)">
<summary>
 Given a kernel by action delegate, then launches it with parameters.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILRetrieveKernel(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILRetrieveKernel(Alea.CUDA.Worker,System.Delegate)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``16(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``15(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``14(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``13(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``12(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``11(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``10(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``9(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``8(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``7(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5,``6},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``6(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4,``5},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``5(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``4(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``3(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunchMethod``2(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function with all arguments fully tupled, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``16(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.FSharpFunc{``10,Microsoft.FSharp.Core.FSharpFunc{``11,Microsoft.FSharp.Core.FSharpFunc{``12,Microsoft.FSharp.Core.FSharpFunc{``13,Microsoft.FSharp.Core.FSharpFunc{``14,Microsoft.FSharp.Core.FSharpFunc{``15,Microsoft.FSharp.Core.Unit}}}}}}}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``15(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.FSharpFunc{``10,Microsoft.FSharp.Core.FSharpFunc{``11,Microsoft.FSharp.Core.FSharpFunc{``12,Microsoft.FSharp.Core.FSharpFunc{``13,Microsoft.FSharp.Core.FSharpFunc{``14,Microsoft.FSharp.Core.Unit}}}}}}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``14(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.FSharpFunc{``10,Microsoft.FSharp.Core.FSharpFunc{``11,Microsoft.FSharp.Core.FSharpFunc{``12,Microsoft.FSharp.Core.FSharpFunc{``13,Microsoft.FSharp.Core.Unit}}}}}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``13(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.FSharpFunc{``10,Microsoft.FSharp.Core.FSharpFunc{``11,Microsoft.FSharp.Core.FSharpFunc{``12,Microsoft.FSharp.Core.Unit}}}}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``12(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.FSharpFunc{``10,Microsoft.FSharp.Core.FSharpFunc{``11,Microsoft.FSharp.Core.Unit}}}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``11(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.FSharpFunc{``10,Microsoft.FSharp.Core.Unit}}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``10(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.FSharpFunc{``9,Microsoft.FSharp.Core.Unit}}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``9(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.FSharpFunc{``8,Microsoft.FSharp.Core.Unit}}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``8(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.FSharpFunc{``7,Microsoft.FSharp.Core.Unit}}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``7(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.FSharpFunc{``6,Microsoft.FSharp.Core.Unit}}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``6(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.FSharpFunc{``5,Microsoft.FSharp.Core.Unit}}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``5(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.FSharpFunc{``4,Microsoft.FSharp.Core.Unit}}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``4(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``3,Microsoft.FSharp.Core.Unit}}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``3(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.Unit}}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``2(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.ILLaunch``1(Alea.CUDA.Worker,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}})">
<summary>
 Given a quotation of a non-quoted function, returns its launching function.
 This function is friendly to F#.
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``8(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6,``7},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6,``7)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``7(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5,``6},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5,``6)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``6(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4,``5},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4,``5)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``5(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3,``4},Alea.CUDA.LaunchParam,``0,``1,``2,``3,``4)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``4(Alea.CUDA.Worker,System.Action{``0,``1,``2,``3},Alea.CUDA.LaunchParam,``0,``1,``2,``3)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``3(Alea.CUDA.Worker,System.Action{``0,``1,``2},Alea.CUDA.LaunchParam,``0,``1,``2)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``2(Alea.CUDA.Worker,System.Action{``0,``1},Alea.CUDA.LaunchParam,``0,``1)">
<summary>
 [omit]
</summary>
</member>
<member name="M:Alea.CUDA.IL.WorkerExtensions.BuildAndRunKernelOnce``1(Alea.CUDA.Worker,System.Action{``0},Alea.CUDA.LaunchParam,``0)">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.WorkerExtensions">
<summary>
 Extensions of `Worker` type, to launch static function as kernel directly.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Wrapper">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Wrapper`1">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Wrapper`2">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Wrapper`3">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Wrapper`4">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Wrapper`5">
<summary>
 [omit]
</summary>
</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.ILKernelHelpers">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.UsageByILMethodUtil">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.UsageByInstanceUtil">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Alea.CUDA.IL.Util">

</member>
<member name="">

</member>
<member name="T:System.AssemblyVersionInformation">

</member>
</members>
</doc>
